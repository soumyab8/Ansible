# Launch instances, runs some tasks
# and then terminate them
# This is already there in the ansible documentations, I a just consuming it.

- name: Playbook to create the ec2, do a dryn run and then self-destroy
  hosts: localhost
  gather_facts: False
  vars:
    instance_type: "t3.micro"
    security_group_id: "sg-0bf27dd0bb525e6b9"  # Update as per your security group id
    image: "ami-074d0805b2cd17376"             # Update as per your ami-id id, ensure this ami has ANSIBLE installed ( as it runs ansible-pull)
    region: "us-east-1"
  tasks:
    - name: Launch instance                    # Creates ec2 instance 
      amazon.aws.ec2:
        group_id: "{{ security_group_id }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        instance_tags:
          Name: ansible-dryrun-check
      register: ec2

    - name: Add new instance to host group    # Adding the IP Address of the created instance under the groupName launched and this in in-memory
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched  # name of the group
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up           # Sleep task till SSH is open
      delegate_to: "{{ item.public_ip }}"
      wait_for_connection:
        delay: 30  # Initial delay to ensure we run the playbook only after the system accepts the ssh connection. To avoid false failures.
        timeout: 60
      loop: "{{ ec2.instances }}"
      ignore_errors: yes

    - name: Set a Instance_ID Variable       # Registering the variable INSTANCE_ID with the tagName, so that we can use it in the next play
      set_fact:
        INSTANCE_ID: "{{ ec2.instance_ids }}"

- name: Dry-Run the Role and Terminate the instance
  hosts: launched
  gather_facts: Yes
  tasks:
    - name: set the facts per host
      set_fact:
        INSTANCE_ID: "{{hostvars['localhost']['INSTANCE_ID']}}"   # This is how we take the variables from the previous play of the same playbook

    - name: Import the role
      block:                              # Block is used to club 2 or more tasks in a single task
        - name: Import a role
          import_role:
            name: "{{role_name}}"
          ignore_errors: yes
          become: yes
      always:                             # This ensure this will be running always even if the previous task in the block fails. Why are we using it to ensure, instance deletion happens at any cost.
        - name: Terminate instances that were previously launched
          delegate_to: 127.0.0.1
          amazon.aws.ec2:
            state: 'absent'
            instance_ids: '{{ INSTANCE_ID }}'
            region: us-east-1
